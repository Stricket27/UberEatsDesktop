/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package appSisPlan;

import sisPlanDAL.ProductoDAL;
import sisPlanDAL.RestauranteDAL;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import sisPlanDAL.LineaDetalleDAL;
import sisPlanDAL.OrdenCompraDAL;
import sisPlanDAL.PagoDAL;
import sisPlanEntidades.Empacados;
import sisPlanEntidades.LineaDetalle;
import sisPlanEntidades.Moneda;
import sisPlanEntidades.OrdenCompra;
import sisPlanEntidades.Pago;
import sisPlanEntidades.Perfil;
import sisPlanEntidades.Producto;
import sisPlanEntidades.Restaurante;
import sisPlanEntidades.TipoComida;
import sisPlanEntidades.Usuario;

/**
 *
 * @author moise
 */
public class JFrmCompra extends javax.swing.JFrame {

    private DefaultListModel<Producto> modeloProductos = new DefaultListModel<Producto>();
    private DefaultListModel<Producto> modeloCarrito = new DefaultListModel<Producto>();
    private boolean isLllenandoCombo = false;
    private int start = 0;
    private Timer timer = null;
    private OrdenCompra orden = null;
    private Pago pago;
    Usuario usuarioActivo;
    Perfil oPerfil;

    /**
     * Creates new form jFrmCompra
     */
    public JFrmCompra() {
        initComponents();
        jLabel7.setVisible(false);
        jCboCantidad.setVisible(false);
        jTxtNumOrden.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtnSalir = new javax.swing.JButton();
        jPanBuscarPorRestaurante = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jCboTipoComida = new javax.swing.JComboBox<>();
        jBtnContinuar = new javax.swing.JButton();
        jBtnCambiarTipo = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTxtDescripcion = new javax.swing.JTextField();
        jCboRestaurante = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTxtNumOrden = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLstLoEncontrado = new javax.swing.JList<>();
        jBtnAgregar = new javax.swing.JButton();
        jBtnEliminar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLstSuCompra = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jCboCantidad = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jCboMoneda = new javax.swing.JComboBox<>();
        jBtnComprar = new javax.swing.JButton();
        jBtnCancelarCompra = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTxtSubTotal = new javax.swing.JTextField();
        jTxtImpuesto = new javax.swing.JTextField();
        jTxtTotal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ventana de Compras");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBtnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/AnteriorPagina.png"))); // NOI18N
        jBtnSalir.setText("Salir");
        jBtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(1080, 430, -1, -1));

        jPanBuscarPorRestaurante.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar por Restaurante"));
        jPanBuscarPorRestaurante.setForeground(new java.awt.Color(255, 255, 255));
        jPanBuscarPorRestaurante.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("Tipo de Comida");
        jPanBuscarPorRestaurante.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jPanBuscarPorRestaurante.add(jCboTipoComida, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 204, -1));

        jBtnContinuar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/Aceptar.png"))); // NOI18N
        jBtnContinuar.setText("Continuar");
        jBtnContinuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnContinuarActionPerformed(evt);
            }
        });
        jPanBuscarPorRestaurante.add(jBtnContinuar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, -1));

        jBtnCambiarTipo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/Modificar.png"))); // NOI18N
        jBtnCambiarTipo.setText("Cambiar Tipo");
        jBtnCambiarTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCambiarTipoActionPerformed(evt);
            }
        });
        jPanBuscarPorRestaurante.add(jBtnCambiarTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, -1, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar por Producto"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("Descripcion");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, -1));

        jTxtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxtDescripcionKeyTyped(evt);
            }
        });
        jPanel2.add(jTxtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 29, 210, -1));

        jPanBuscarPorRestaurante.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 310, 60));

        jCboRestaurante.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCboRestaurante.setForeground(new java.awt.Color(51, 51, 55));
        jCboRestaurante.setEnabled(false);
        jCboRestaurante.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCboRestauranteItemStateChanged(evt);
            }
        });
        jPanBuscarPorRestaurante.add(jCboRestaurante, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 204, 30));

        jLabel1.setText("Restaurante");
        jPanBuscarPorRestaurante.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, -1));

        getContentPane().add(jPanBuscarPorRestaurante, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 330, 230));

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 380, 50));

        jTxtNumOrden.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jTxtNumOrden.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(jTxtNumOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 310, 180, 60));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Número de orden");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, -1, -1));

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel14.setText("■");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, -1, -1));

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setText("Lo encontrado");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        jLstLoEncontrado.setModel(modeloProductos);
        jLstLoEncontrado.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jLstLoEncontradoValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jLstLoEncontrado);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, 320, 200));

        jBtnAgregar.setText("Agregar  su compra");
        jBtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 90, -1, -1));

        jBtnEliminar.setText("Eliminar a su carrito");
        jBtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 140, -1, -1));

        jLstSuCompra.setModel(modeloCarrito);
        jScrollPane2.setViewportView(jLstSuCompra);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(843, 50, 330, 190));

        jLabel6.setBackground(new java.awt.Color(255, 255, 255));
        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("Agregar al Carrito");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 20, -1, -1));

        getContentPane().add(jCboCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 180, 60, -1));

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Cantidad");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 190, -1, -1));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Moneda");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 270, -1, -1));

        getContentPane().add(jCboMoneda, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 270, 120, -1));

        jBtnComprar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/Aceptar.png"))); // NOI18N
        jBtnComprar.setText("Confirmar su compra");
        jBtnComprar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnComprar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnComprarActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnComprar, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 260, -1, -1));

        jBtnCancelarCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/Eliminar.png"))); // NOI18N
        jBtnCancelarCompra.setText("Cancelar su compra");
        jBtnCancelarCompra.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnCancelarCompra.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBtnCancelarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarCompraActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnCancelarCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 260, -1, -1));

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Sub Total");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 340, -1, -1));

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Impuesto");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 370, -1, -1));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Total");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 400, -1, -1));
        getContentPane().add(jTxtSubTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 340, 150, -1));
        getContentPane().add(jTxtImpuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 370, 151, -1));
        getContentPane().add(jTxtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 400, 151, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sisPlanImagenes/Logo de Uber Eats.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 360, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        //CUANDO SE HABRA LA VENTANA, SE DEBE DE LLENAR LO SOLICITADO
        llenarCombo();
        try {
            ficharOrden();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }
        //SE VERA QUE USUARIO ESTA UTILIZANDO LA APLICACION
        this.jLabel15.setText(usuarioActivo.getCodigo() + " - " + usuarioActivo.getPerfil().toString());
    }//GEN-LAST:event_formWindowOpened

    private void jCboRestauranteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCboRestauranteItemStateChanged
        //VACIAR LAS LISTAS Y GENERAR AUTOMATICAMENTE EL ORDEN DE COMPRA
        modeloProductos.removeAllElements();
        modeloCarrito.removeAllElements();
        llenarProductos();
        try {
            ficharOrden();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }
    }//GEN-LAST:event_jCboRestauranteItemStateChanged

    private void jTxtDescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtDescripcionKeyTyped
        //METODO PARA QUE EL USUARIO PUEDA BUSCAR EL PRODUCTO DEL RESTAURANTE POR EL NOMBRE
//        if (evt.getKeyChar() != KeyEvent.VK_BACK_SPACE) { 
            modeloProductos.removeAllElements();
            llenarProductos();
            String subhilera;
            String digitado = this.jTxtDescripcion.getText() /*+ evt.getKeyChar()*/;
            int longitud = digitado.length();
            Restaurante rest = (Restaurante) jCboRestaurante.getSelectedItem();
            ArrayList<Producto> listaProdcutos = new ArrayList<>();
            if (!digitado.equals("")) {
                for (int i = 0; i < this.modeloProductos.size(); i++) {
                    if (longitud <= ((Producto) this.modeloProductos.getElementAt(i)).toString().trim().length()) {
                        subhilera = ((Producto) this.modeloProductos.getElementAt(i)).toString().substring(0, longitud);
                        if (digitado.equalsIgnoreCase(subhilera)) {
                            listaProdcutos.add((Producto) this.modeloProductos.getElementAt(i));
                        }
                    }
                }
            }
            if (!listaProdcutos.isEmpty()) {
                modeloProductos.removeAllElements();
                for (Producto prodcuto : listaProdcutos) {
                    modeloProductos.addElement(prodcuto);
                }
            }
//        }
    }//GEN-LAST:event_jTxtDescripcionKeyTyped

    private void jBtnContinuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnContinuarActionPerformed
        //METODO PARA QUE LA PERSONA PUEDA ELEGIR EL TIPO DE COMIDA QUE BUSCAR, LOS RESTAURANTES DISPONIBLES Y QUE SALGA EN LA LISTA
        if (jCboTipoComida.getSelectedIndex() != -1) {
            try {
                isLllenandoCombo = true;
                jCboRestaurante.removeAllItems();
                ArrayList<Restaurante> lista = RestauranteDAL.
                        buscarRestauranteporTipoComida(String.valueOf((TipoComida) jCboTipoComida.getSelectedItem()));
                for (Restaurante restaurante : lista) {
                    jCboRestaurante.addItem(restaurante);
                }
                jCboRestaurante.setSelectedIndex(-1);
                jBtnContinuar.setEnabled(false);
                jCboTipoComida.setEnabled(false);
                jCboRestaurante.setEnabled(true);
                isLllenandoCombo = false;
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.toString());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione tipo de producto o restaurante");
        }
    }//GEN-LAST:event_jBtnContinuarActionPerformed

    private void jBtnCambiarTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCambiarTipoActionPerformed
        jBtnContinuar.setEnabled(true);
        jCboTipoComida.setEnabled(true);
        jCboTipoComida.setSelectedIndex(-1);
        jCboRestaurante.setEnabled(false);
        modeloProductos.removeAllElements();
        modeloCarrito.removeAllElements();
        jTxtSubTotal.setText("");
        jTxtImpuesto.setText("");
        jTxtTotal.setText("");
    }//GEN-LAST:event_jBtnCambiarTipoActionPerformed

    private void jLstLoEncontradoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jLstLoEncontradoValueChanged
        //AGREGAR EN LA LISTA LOS PROUDCTOS 
        //VALIDAND SI SON EMPECADOS O PREPARADOS Y SALIRLE OTRAS OPCION
        
        if (jLstLoEncontrado.getSelectedIndex() != -1) {
            Producto pro = ((Producto) this.modeloProductos.getElementAt(jLstLoEncontrado.getSelectedIndex()));
            if (pro instanceof Empacados) {
                jLabel7.setVisible(true);
                jCboCantidad.setVisible(true);
                int cantidad = ((Empacados) pro).getCantidad();
                jCboCantidad.removeAllItems();
                for (int i = 1; i <= cantidad; i++) {
                    jCboCantidad.addItem(i);
                }
                jCboCantidad.setSelectedIndex(-1);
            } else {
                jLabel7.setVisible(false);
                jCboCantidad.setVisible(false);
            }
        }
    }//GEN-LAST:event_jLstLoEncontradoValueChanged

    private void jBtnCancelarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarCompraActionPerformed
        // TODO add your handling code here:
        this.vaciarCompra();
    }//GEN-LAST:event_jBtnCancelarCompraActionPerformed

    private void jBtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarActionPerformed
        //PARA AGREGAR LOS PRODUCTOS QUE EL CLIENTE QUIERE A SU CARRITO
        //VALIDAR SI EL CLIENTE AGREGO UN EMPACADO Y NO PUSO UNA CANTIDAD 
        this.jTxtSubTotal.setEditable(false);
        this.jTxtSubTotal.setEditable(false);
        this.jTxtTotal.setEditable(false);

        int indice = this.jLstLoEncontrado.getSelectedIndex();
        if (indice >= 0) {
            LineaDetalle detalle = new LineaDetalle();
            Producto producto = (Producto) this.jLstLoEncontrado.getSelectedValue();
            if (producto instanceof Empacados) {
                if (jCboCantidad.getSelectedIndex() != -1) {
                    ((Empacados) producto).setCantidadSeleccionada((int) jCboCantidad.getSelectedItem());
                    detalle.setCantidad(((Empacados) producto).getCantidadSeleccionada());
                } else {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar la cantidad de este produto empacado.");
                    return;
                }
            } else {
                detalle.setCantidad(1);
            }
            detalle.setoProducto(producto);
            orden.agregarLineaDetalle(detalle);
            jTxtSubTotal.setText(String.valueOf(orden.subTotal()));
            jTxtImpuesto.setText(String.valueOf(orden.totalImpuestos()));
            jTxtTotal.setText(String.valueOf(orden.totalOrden()));
            this.modeloCarrito.addElement(producto);
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un producto de la lista");
        }
    }//GEN-LAST:event_jBtnAgregarActionPerformed

    private void jBtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEliminarActionPerformed
        // TODO add your handling code here:
        //QUITAR PRODUCTOS QUE EL CLIENTE NO QUIERE
        int indice = this.jLstSuCompra.getSelectedIndex();
        if (indice >= 0) {
            orden.eliminarLineaDetalle(indice);
            jTxtSubTotal.setText(String.valueOf(orden.subTotal()));
            jTxtImpuesto.setText(String.valueOf(orden.totalImpuestos()));
            jTxtTotal.setText(String.valueOf(orden.totalOrden()));
            this.modeloCarrito.remove(indice);
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un producto de la lista del carrito a eliminar");
        }
    }//GEN-LAST:event_jBtnEliminarActionPerformed

    private void jBtnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnComprarActionPerformed
        // BOTON FINAL PARA REALIZAR SU COMPRA Y SALIR UNA FACTURA ELECTRONICA
        if (jCboMoneda.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Por favor escoja con cuál moneda desea realizar el pago.");
            return;
        }
        orden.setCliente(usuarioActivo);
        orden.setRestaurante((Restaurante) jCboRestaurante.getSelectedItem());
        orden.realizarPago(orden.totalOrden(), (Moneda) jCboMoneda.getSelectedItem());

        try {
            OrdenCompraDAL.insertaOrdenCompra(orden);
            for (LineaDetalle linea : orden.getArraLineaDetalle()) {
                LineaDetalleDAL.insertaOrdenCompra(linea.getoProducto(), orden.getNumeroOrdenes());
                if (linea.getoProducto() instanceof Empacados) {
                    ProductoDAL.actualizarStock(linea.getoProducto().getCodigo(),
                            ((Empacados) linea.getoProducto()).getCantidadSeleccionada());
                }
            }
            PagoDAL.insertaOrdenCompra(orden.getPago(), orden.getNumeroOrdenes());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
            return;
        }
        JOptionPane.showMessageDialog(this, "Factura realizada. Gracias por su compra.");
        JFrmFacturaElectronica electronica = new JFrmFacturaElectronica();
        sisPlanUtilitarios.UtilitarioVentana.centrarVentanaJFrame(electronica, false);
        electronica.setFactura(orden.detalleFactura());
        
//        JFrmFactura facturacion = new JFrmFactura();
//        facturacion.setLocationRelativeTo(null);
//        facturacion.setFactura(orden.detalleFactura());
//        facturacion.setVisible(true);
        this.dispose();
        try {
            ficharOrden();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }
    }//GEN-LAST:event_jBtnComprarActionPerformed

    private void jBtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jBtnSalirActionPerformed
    //LLENAR LA LISTA ACORDE A LO QUE EL CLIENTE SELECCIONE EN LOS RESTAURANTES
    public void llenarProductos() {
        if (isLllenandoCombo == false) {
            try {
                Restaurante rest = (Restaurante) jCboRestaurante.getSelectedItem();
                ArrayList<Producto> listaProdcutos = ProductoDAL.llenarProducto(rest.getCodigo());
                for (Producto prodcuto : listaProdcutos) {
                    modeloProductos.addElement(prodcuto);
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.toString());
            }
        }
    }
    
    //LLENAR TODOS LOS COMBOBOX
    public void llenarCombo() {
        for (TipoComida tipo : TipoComida.values()) {
            jCboTipoComida.addItem(tipo);
        }
        for (Moneda moneda : Moneda.values()) {
            jCboMoneda.addItem(moneda);
        }
        jCboTipoComida.setSelectedIndex(-1);
        jCboMoneda.setSelectedIndex(-1);
    }

    int ordenID = 1;

    //VALIDACION DE QUIEN ESTA EN LA CUENTA 
    public void ficharOrden() throws Exception {
        try {
            if (!OrdenCompraDAL.ficharOrden(String.valueOf(ordenID))) {
                jTxtNumOrden.setText(String.valueOf(ordenID));
                orden = new OrdenCompra();
                orden.setNumeroOrdenes(ordenID);
            } else {
                ordenID++;
                ficharOrden();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.toString());
        }
    }

    public Usuario getUsuarioActivo() {
        return usuarioActivo;
    }

    public void setUsuarioActivo(Usuario usuarioActivo) {
        this.usuarioActivo = usuarioActivo;
    }

    //VACIAR TODO LO REALIZADO
    public void vaciarCompra() {
        jTxtDescripcion.setText("");
        jTxtImpuesto.setText("");
        jTxtSubTotal.setText("");
        jTxtTotal.setText("");
        modeloCarrito.removeAllElements();
        modeloProductos.removeAllElements();
        jLabel7.setVisible(false);
        jCboCantidad.setVisible(false);
        jCboMoneda.setSelectedIndex(-1);
        jCboRestaurante.setEnabled(false);
        jCboTipoComida.setEnabled(true);
        jCboTipoComida.setSelectedIndex(-1);
        jBtnContinuar.setEnabled(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrmCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrmCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrmCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrmCompra.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrmCompra().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAgregar;
    private javax.swing.JButton jBtnCambiarTipo;
    private javax.swing.JButton jBtnCancelarCompra;
    private javax.swing.JButton jBtnComprar;
    private javax.swing.JButton jBtnContinuar;
    private javax.swing.JButton jBtnEliminar;
    private javax.swing.JButton jBtnSalir;
    private javax.swing.JComboBox<Integer> jCboCantidad;
    private javax.swing.JComboBox<Moneda> jCboMoneda;
    private javax.swing.JComboBox<Restaurante> jCboRestaurante;
    private javax.swing.JComboBox<TipoComida> jCboTipoComida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<Producto> jLstLoEncontrado;
    private javax.swing.JList<Producto> jLstSuCompra;
    private javax.swing.JPanel jPanBuscarPorRestaurante;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTxtDescripcion;
    private javax.swing.JTextField jTxtImpuesto;
    private javax.swing.JTextField jTxtNumOrden;
    private javax.swing.JTextField jTxtSubTotal;
    private javax.swing.JTextField jTxtTotal;
    // End of variables declaration//GEN-END:variables
}
